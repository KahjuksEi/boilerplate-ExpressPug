Остановка через ctrl + C а не ctrl + Z))))

npm init
npm install express --save установка экспресса и добавление в зависимости
Создаем app.js с кодом
var express = require('express');
var app = express();
app.get('/', function (req, res) {
  res.send('Hello World!');
});
app.listen(3000, function () {
  console.log('Example app listening on port 3000!');
});
req (запрос) и res (ответ) являются теми же объектами, которые предоставляет Node, поэтому можно вызвать req.pipe(), req.on('data', callback) и выполнить любые другие действия, не требующие участия Express.

node app.js запуск

npm install express-generator -g
Для быстрого создания “скелета” приложения используется инструмент для генерации приложений express.
express -h Для просмотра опций команды

express --view=pug someapp создает приложение Express в текущем рабочем каталоге
cd someapp 
npm install
set DEBUG=someapp:* & npm start запуск приложения

Для автоматизации обновления юзаем nodemon, а впрочем
npm i nodemon -g
nodemon app.js

для связки с mysql 
npm install mysql ставим модуль и пишем например в app.js
var mysql      = require('mysql');
var connection = mysql.createConnection({
  host     : 'localhost',
  user     : 'root',
  password : ''
});
connection.connect();
connection.query('SELECT 1 + 1 AS solution', function(err, rows, fields) {
  if (err) throw err;
  console.log('The solution is: ', rows[0].solution);
});
connection.end();


